install.packages(DT)
install.packages('DT')
install.packages('shiny')
install.packages('ggplot2')
library(shiny)
library(ggplot2)
library(DT)
library(ggplot2)
?showOutput
4000 - 3876.85
install.packages("tm",dependencies=TRUE)
library(dplyr)
library(tm)
devtools::install_github("rstudio/shinyapps")
devtools::install_github("stan-dev/shinystan", build_vignettes = TRUE)
install.packages("shinystan")
library(shinystan)
launch_shinystan_demo()
data("attitude")
str(attitude)
?Rprofile
options
options()
r=getOption("repos")
r
rm(r)
install.packages(fortunes)
install.packages("fortunes")
library(shinystan)
shinystan::launch_shinystan_demo()
shiny::runApp('GitHub/Myanmar Dash/Myanmar Shiny')
plot.new()
shiny::runApp('GitHub/Myanmar Dash/Myanmar Shiny')
shiny::runApp('GitHub/Myanmar Dash/Myanmar Shiny')
shiny::runApp('GitHub/Myanmar Dash/Myanmar Shiny')
setwd("~/GitHub/Myanmar Dash/Myanmar Shiny")
shiny::runApp()
full_data <- read.csv('myanmar dash data.csv', stringsAsFactors = FALSE)
income_data <- filter(full_data, flow == 'income')
expenditure_data <- filter(full_data, flow == 'expenditure')
top_10 <- income_data  %>%
filter(region == input$region_summary_select) %>%
group_by(region, budget_item)  %>%
summarise(value = sum(value))  %>%
top_n(value, n = 10)  %>%
arrange(desc(value))
top_10 <- income_data  %>%
#filter(region == input$region_summary_select) %>%
group_by(region, budget_item)  %>%
summarise(value = sum(value))  %>%
top_n(value, n = 10)  %>%
arrange(desc(value))
ggplot(top_10,
aes(
x = reorder(budget_item, value),
y = value,
fill = region
)) +
geom_bar(stat = 'identity') +
coord_flip() +
theme_hc() +
ggtitle(paste("Top 10 Income Budget Items in", input$region_summary_select)) +
scale_fill_manual(values = c("#492970", "#6789483")) +
labs(x = NULL, y = "Million Kyat") +
theme(
axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"),
legend.position = "none"
)
library(shiny) # underlies the whole application
library(dplyr) # used for data handling
library(tidyr) # used for tidying some data for presentation
library(rCharts) # used for interactive charts, not hosted on CRAN so must be installed from github, see http://ramnathv.github.io/rCharts/
library(DT) # used for interactive tables
library(ggplot2)
library(ggthemes)
library(shiny) # underlies the whole application
library(dplyr) # used for data handling
library(tidyr) # used for tidying some data for presentation
library(rCharts) # used for interactive charts, not hosted on CRAN so must be installed from github, see http://ramnathv.github.io/rCharts/
library(DT) # used for interactive tables
library(ggplot2)
library(ggthemes)
ggplot(top_10,
aes(
x = reorder(budget_item, value),
y = value,
fill = region
)) +
geom_bar(stat = 'identity') +
coord_flip() +
theme_hc() +
ggtitle(paste("Top 10 Income Budget Items in", input$region_summary_select)) +
scale_fill_manual(values = c("#492970", "#6789483")) +
labs(x = NULL, y = "Million Kyat") +
theme(
axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"),
legend.position = "none"
)
ggplot(top_10,
aes(
x = reorder(budget_item, value),
y = value,
fill = region
)) +
geom_bar(stat = 'identity') +
coord_flip() +
theme_hc() +
#ggtitle(paste("Top 10 Income Budget Items in", input$region_summary_select)) +
scale_fill_manual(values = c("#492970", "#6789483")) +
labs(x = NULL, y = "Million Kyat") +
theme(
axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"),
legend.position = "none"
)
top_10 <- income_data  %>%
filter(region == "Yangon") %>% #input$region_summary_select) %>%
group_by(region, budget_item)  %>%
summarise(value = sum(value))  %>%
top_n(value, n = 10)  %>%
arrange(desc(value))
ggplot(top_10,
aes(
x = reorder(budget_item, value),
y = value,
fill = region
)) +
geom_bar(stat = 'identity') +
coord_flip() +
theme_hc() +
#ggtitle(paste("Top 10 Income Budget Items in", input$region_summary_select)) +
scale_fill_manual(values = c("#492970", "#6789483")) +
labs(x = NULL, y = "Million Kyat") +
theme(
axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"),
legend.position = "none"
)
shiny::runApp()
?box
library(shinydashboard)
